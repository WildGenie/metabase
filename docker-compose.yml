# Inspired by https://mherman.org/blog/dockerizing-a-react-app/
# TODO Have a separate `docker-compose`-file for production (see also https://docs.docker.com/compose/production/)

version: '3.7'

services:
  database:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_USER=postgres#${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=postgres#${TYPEORM_PASSWORD}
      - POSTGRES_DB=postgres#${TYPEORM_DATABASE}postgres
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile-development
    command: npm run start:dev
    volumes:
      - ./backend:/app
      # - /app/node_modules # Keep the `node_modules` of the image
      - backend_node_modules:/app/node_modules
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile-development
    command: pnpm run start
    volumes:
      - ./frontend:/app
      # - /app/node_modules # Keep the `node_modules` of the image
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    depends_on:
      - backend

volumes:
  data:
  frontend_node_modules:
  backend_node_modules:
