# Inspired by https://mherman.org/blog/dockerizing-a-react-app/
# TODO Have a separate `docker-compose`-file for production (see also https://docs.docker.com/compose/production/)

version: '3.7'

services:
  database:
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgress
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile-${ENVIRONMENT}
      args:
        GROUP_ID: ${GROUP_ID}
        GROUP_NAME: ${GROUP_NAME}
        USER_ID: ${USER_ID}
        USER_NAME: ${USER_NAME}
    command: python manage.py runserver 0.0.0.0:5001
    volumes:
      - ./backend:/app
    ports:
      - "3001:3001"
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile-${ENVIRONMENT}
    command: pnpm start
    volumes:
      - ./frontend:/app
      - /app/node_modules # Keep the `node_modules` of the image
      # - node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${ENVIRONMENT}
    depends_on:
      - backend

volumes:
  data:
  # node_modules:
