version: '3.3'

services:
  database:
    restart: always
    image: postgres:11.5-alpine
    # For possible command-line arguments see
    # https://www.postgresql.org/docs/current/app-postgres.html
    # and for possible configuration parameters like `max_connections` see
    # https://www.postgresql.org/docs/current/runtime-config.html
    command: [
      "-c", "max_connections=100"
    ]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=postgres
    volumes:
      - data:/var/lib/postgresql/data
      - ./secrets:/run/secrets:ro

  backend:
    image: registry.gitlab.cc-asp.fraunhofer.de:4567/ise621/icon/metabase-backend-production:v0.0.0-482-g8c3c73a
    ports:
      - 8002:80
    restart: always
    # https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-3.1#command-line
    # command: ["dotnet", "App.dll", "/Logging:LogLevel:Default=Debug", "/Logging:LogLevel:Microsoft=Debug", "/Logging:LogLevel:Microsoft:Hosting:Lifetime=Debug"]
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ASPNETCORE_ENVIRONMENT=production
      - XBASE_Host=https://${HOST}:${HTTPS_PORT}
      - XBASE_JsonWebToken__EncryptionKey=${JSON_WEB_TOKEN_ENCRYPTION_KEY}
      - XBASE_JsonWebToken__SigningKey=${JSON_WEB_TOKEN_SIGNING_KEY}
      - XBASE_TestlabSolarFacadesOpenIdConnectClientSecret=${TESTLAB_SOLAR_FACADES_OPEN_ID_CONNECT_CLIENT_SECRET}
    volumes:
      - ./secrets:/run/secrets:ro
    depends_on:
      - database

  frontend:
    image: registry.gitlab.cc-asp.fraunhofer.de:4567/ise621/icon/metabase-frontend-production:v0.0.0-482-g8c3c73a
    ports:
      - 8001:80
    restart: always
    environment:
      - NODE_ENV=production
    depends_on:
      - backend

  nginx:
    restart: always
    image: nginx:1.19.4-alpine
    command: [
      "nginx",
      "-g", "daemon off;"
      ]
    ports:
      - 8000:80
    volumes:
      - ./nginx/templates/production:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  data:
