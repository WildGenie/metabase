# See https://docs.docker.com/compose/production/

version: '3.3'

services:
  database:
    restart: always
    image: postgres:11.5-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=postgres
    # secrets: # https://docs.docker.com/compose/compose-file/#secrets
    #   - source: postgres_password
    #     target: /run/secrets/postgres_password
    #     mode: 0440
    volumes:
      - data:/var/lib/postgresql/data
      - ./secrets:/run/secrets:ro

  backend:
    restart: always
    # https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-3.1#command-line
    # command: ["dotnet", "App.dll", "/Logging:LogLevel:Default=Debug", "/Logging:LogLevel:Microsoft=Debug", "/Logging:LogLevel:Microsoft:Hosting:Lifetime=Debug"]
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ASPNETCORE_ENVIRONMENT=production
    # secrets: # https://docs.docker.com/compose/compose-file/#secrets
    #   - source: postgres_password
    #     target: /run/secrets/postgres_passwords
    #     mode: 0400
    volumes:
      - ./secrets:/run/secrets:ro
    depends_on:
      - database

  frontend:
    restart: always
    depends_on:
      - backend

  nginx:
    restart: always
    image: nginx:1.19.4-alpine
    command: [
      "nginx",
      "-g", "daemon off;"
      ]
    ports:
      - 8000:80
    volumes:
      - ./nginx/templates/production:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  data:

# secrets:
#   postgres_password:
#     file: ./secrets/postgres_password
#   postgres_passwords:
#     file: ./secrets/postgres_passwords
